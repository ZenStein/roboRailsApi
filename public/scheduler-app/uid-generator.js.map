{"version":3,"file":"uid-generator.js","sourceRoot":"","sources":["../src/demo-app/scheduler-app/uid-generator.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyB,eAIzB,CAAC,CAJuC;AAKxC;IAAA;QAEA,0HAA0H;QAC1H,iBAAY,GAAK,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAA;IA6B1I,CAAC;IA3BD,+BAAQ,GAAR,UAAS,MAAc,EAAE,cAAuB;QAC5C,IAAI,KAAK,GAAG,CAAC,MAAM,GAAC,EAAE,CAAC,GAAG,CAAC,CAAA;QAC3B,wCAAwC;QACxC,IAAI,OAAO,GAAG,EAAE,GAAE,KAAK,CAAA,CAAE,2BAA2B;QAEpD,EAAE,CAAA,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA,CAAC;YACZ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAC,EAAE,CAAC,CAAA;YACjC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;QACpC,CAAC;QACL,EAAE,CAAA,CAAC,OAAO,cAAc,IAAI,QAAQ,CAAC,CAAA,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAA;YAC9C,OAAO,GAAG,OAAO,GAAG,GAAG,GAAG,cAAc,CAAA;QAC5C,CAAC;QAEF,MAAM,CAAC,OAAO,CAAA;IACjB,CAAC;IACD,4BAAK,GAAL,UAAM,MAAc,EAAE,aAAqB;QACvC,EAAE,CAAA,CAAC,aAAa,GAAG,CAAC,CAAC,CAAA,CAAC;YAClB,MAAM,CAAC,MAAM,CAAA;QACjB,CAAC;QACD,IAAI,SAAS,GAAG,MAAM,CAAA;QACtB,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,aAAa,EAAC,CAAC,EAAE,EAAC,CAAC;YAC7B,SAAS,GAAG,SAAS,GAAE,EAAE,GAAE,MAAM,CAAA;QACrC,CAAC;QACD,MAAM,CAAC,SAAS,CAAA;IACpB,CAAC;IA/BD;QAAC,iBAAU,EAAE;;oBAAA;IAiCb,mBAAC;AAAD,CAAC,AAhCD,IAgCC;AAhCY,oBAAY,eAgCxB,CAAA","sourcesContent":["import {Injectable} from '@angular/core'\n\n\n\n@Injectable()\nexport class UidGenerator {\n\n//listNameUids = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\nlistNameUids =   ['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25']\n\ngenerate(listId: number, listItemNumber?: number): string{\n    let index = (listId%26) | 0\n    //let listUid = this.listNameUids[index]\n    let listUid = ''+ index  // this.listNameUids[index]\n\n    if(listId > 25){\n        let times = Math.floor(listId/26)\n        listUid = this.cycle(listUid, times) \n        }\n    if(typeof listItemNumber == 'number'){\n        console.log('did pass in number to generator')\n        listUid = listUid + '_' + listItemNumber    \n    }\n    \n   return listUid\n}\ncycle(letter: string, iteratorCount: number){\n    if(iteratorCount < 1){\n        return letter\n    }\n    let theLetter = letter\n    for(var x=0;x<iteratorCount;x++){\n        theLetter = theLetter +''+ letter   \n    }\n    return theLetter\n}\n\n}\n"]}