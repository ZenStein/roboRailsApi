{"version":3,"file":"cs-li-dragger.directive.js","sourceRoot":"","sources":["../src/demo-app/scheduler-app/cs-li-dragger.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Output, EventEmitter } from '@angular/core';\n\n@Directive({\nselector: '[csDragger]',\nhost:{\n    '(dragstart)':'onDragStart($event)',\n    '(dragenter)':'onDragEnter($event)',\n    '(dragleave)':'onDragLeave($event)',\n     '(dragover)':'onDragOver($event)',\n      '(dragend)':'onDragEnd($event)',\n         '(drop)':'onDrop($event)',\n         '(selectionToggle)':'setSelected($event)'\n}\n})\n\n\nexport class CsLiDragger {\nprivate selected = false\n    @Output() dropspotvalid   = new EventEmitter()\n    @Output() selectionChange = new EventEmitter()\n   \n    constructor(private el: ElementRef) {\n        this.el = el;\n        el.nativeElement.draggable = true;\n    }\n    setSelected(ev){\n        console.log('this on selection in dragger')\n        console.log(this)\n        this.selected = ev.selectionMade\n        if(this.selected){\n        this.includeClass('is-selected')\n        }\n        else{\n        this.removeCLass('is-selected')\n        }\n        console.log('set SELECTED CALLLED')\n\n    }\n    onDragLeave(ev){\n        console.log('drag leave')\n        this.removeCLass('dragged-over') \n        this.dropspotvalid.emit(false)\n    }\n    onDrop(ev){\n        this.removeCLass('dragged-over')\n    }\n    onDragEnd(ev){\n        ev.preventDefault()\n        this.dropspotvalid.emit(false)\n        this.selected = false\n        this.selectionChange.emit(false)\n        this.removeCLass('dragged-over')\n    }\n    onDragEnter(ev){\n        if(this.selected){\n            this.dropspotvalid.emit(false)\n        }\n        else{\n            this.includeClass('dragged-over')\n            this.dropspotvalid.emit(true)\n        }\n    }\n    onDragOver(ev){\n        console.log('dragover')\n        ev.preventDefault()\n        if(this.selected){\n            this.dropspotvalid.emit(false)\n        }\n        else{\n            this.dropspotvalid.emit(true)\n        }\n    }\n    onDragStart(ev){\n        console.log(this)\n        this.selected = true\n        this.selectionChange.emit(true)\n        ev.dataTransfer.effectAllowed = 'move'\n    }\n    classContains(cssClass: string){\n        if(this.el.nativeElement.className.match(cssClass)){\n          return true\n        }\n        else{\n          return false\n        }\n    }\n    includeClass(cssClass: string){\n        this.el.nativeElement.className += ` ${cssClass}`;     \n    }\n    removeCLass(cssClass: string){\n        let x = new RegExp(` ${cssClass}`,'g')\n        this.el.nativeElement.className =  this.el.nativeElement.className.replace(x, '') \n    }\n}\n"]}