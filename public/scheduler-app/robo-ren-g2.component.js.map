{"version":3,"file":"robo-ren-g2.component.js","sourceRoot":"","sources":["../src/demo-app/scheduler-app/robo-ren-g2.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ViewChild, OnInit } from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport { CsLiDragger } from './cs-li-dragger.directive'\nimport { ListModelService } from './list-model.service';\nimport { CsSelected } from './cs-selected.directive';\nimport {ListDropper} from './list-dropper.directive';\nimport {ListControlsComponent} from './list-controls/list-controls.component';\nimport {ItemComponent} from './item/item.component';\n//import { MD_CARD_DIRECTIVES } from '@angular2-material/card';\n//import { MD_BUTTON_DIRECTIVES } from '@angular2-material/button';\nimport{CsMaterialListComponent} from './material-list/material-list.component'\nimport {MdToolbar} from '@angular2-material/toolbar/toolbar';\nimport {MD_SIDENAV_DIRECTIVES} from '@angular2-material/sidenav/sidenav';\nimport {MD_CARD_DIRECTIVES} from '@angular2-material/card/card';\nimport {MdInput} from '@angular2-material/input/input';\nimport {MdButton} from '@angular2-material/button/button';\nimport {MD_LIST_DIRECTIVES} from '@angular2-material/list/list';\nimport {MD_GRID_LIST_DIRECTIVES} from '@angular2-material/grid-list/grid-list';\nimport {MdIcon, MdIconRegistry} from '@angular2-material/icon/icon';\n//import {MdList} from '@angular2-material/list/list';\nimport {UidGenerator} from './uid-generator';\nimport {DragDropModelTemplate} from './drag-drop-model-template';\n\n\n@Component({\n    host:{\n  '(dragstart)' : 'onDragStart($event)',\n  '(dragenter)' : 'onDragEnter($event)',\n  // '(dragover)' : 'onDragOver($event)',\n  '(dragleave)' : 'onDragLeave($event)',\n       '(drop)' : 'onDrop($event)',\n       '(drag)' : 'onDrag($event)',\n    '(dragend)' : 'onDragEnd($event)'//,\n//      '(click)' : 'onClick($event)'    \n    },\n  moduleId: module.id,\n  providers: [ListModelService, UidGenerator, DragDropModelTemplate, MdIconRegistry],\n  selector: 'robo-ren-g2-app',\n  directives: [[CsLiDragger], [CsSelected],[ListDropper], [NgClass], [ListControlsComponent],[ItemComponent],\n         MD_SIDENAV_DIRECTIVES,\n    MD_LIST_DIRECTIVES,\n   MD_GRID_LIST_DIRECTIVES,\n    [ MD_CARD_DIRECTIVES ],\n    MdToolbar,\n    MdButton,\n    MdIcon,\n    MdInput,\n[CsMaterialListComponent],\n  //   MdList, \n      /*,[MD_CARD_DIRECTIVES],[MD_BUTTON_DIRECTIVES]*/],\n  templateUrl: 'robo-ren-g2.component.html',\n  styleUrls: ['robo-ren-g2.component.css']\n})\nexport class RoboRenG2AppComponent implements OnInit {\n\n   title = 'robo-ren-g2 works!'\n    isValidDrop = false\n    canDropToList = false \n    theDragged\n    modelService\n    listsData\n    selectionMarker\n    \nconstructor(modelServ: ListModelService){\n    this.modelService = modelServ\n    //this.modelService.\n    //this.listsData = modelServ.getModel()\n}\nonDrag(ev){\n//ev.preventDefault()\n//return false\n}\n\n    ngOnInit(){\n   let that = this   \n    this.modelService.getModelFromTemplate().subscribe(function(data){\n    console.log('3 layer')\n    console.log(data)\n    that.listsData = data\n    })\n    }\n//  data = [ ['header1','AAA','BBB','fff','hhh'],\n//           ['List 2','CCC','DDD'],\n//           ['header3','XXX','ZZZ'] \n//         ]\n   // modelService = new ListModelService()\n//    templateBuilder = new DragDropModelTemplate(this.data)\n//    listsData = this.modelService.model = this.templateBuilder.conformModel() \n\n    onDragStart(ev){\n      this.modelService.doSet(ev.target.id,'selected',true)\n      this.theDragged = ev.target.id\n      this.modelService.mapSelectedInModel()\n    }\n    onDragEnter(ev){/**/ }\n    onDragOver(ev){ /**/ }\n    onDragLeave(ev){ /*     ev.dataTransfer.effectAllowed = 'move' //    ev.dataTransfer.dropEffect = 'move'*/ }\n    onDrop(ev){\n       // alert('drop')\n       // console.log('dropev')\n       // console.log(ev)\n    ev.preventDefault()\n     if(this.isValidDrop || this.canDropToList){\n      this.modelService.doDropData(ev.target.id, this.canDropToList)\n      this.modelService.resetAllSelectionsToFalse()\n     }\n     this.modelService.doSet(this.theDragged, 'selected', false)\n      this.modelService.flushSelectedLineup()\n      this.listsData = this.modelService.getModel() \n  }\n\n  onDragEnd(ev){\n     // ev.preventDefault()\n      if(this.isValidDrop){\n          console.log('dragend false')\n        return false\n      }\n      else{\n        this.modelService.doSet(this.theDragged, 'selected', false)\n        this.modelService.flushSelectedLineup()\n        this.listsData = this.modelService.getModel() \n      }\n      return false\n   }\n   selectionMade(data){\n       this.modelService.doSet(data.id, 'selected', data.selectionMade, data.shiftKey)\n   }\n  whichList(listUid){\n     let x = listUid.replace(/_[\\d]*/g, '')\n     return x\n  }\n   whichIndex(listUid){\n    let x = listUid.replace(/[\\d]*_/g, '')\n    return x\n  }\n\nsetIsValidDrop(validation){\n    console.log('isvaliddropfire')\n    console.log(validation)\n     this.canDropToList =false \n    this.isValidDrop = validation\n}\nsetCanDropToList(ev){\n    this.canDropToList = ev.canDropToList\n}\naddList(ev){\n    this.listsData =  this.modelService.addListToModel()\n    console.log('addlist hit')\n}\nrefreshAllAssignments(ev){\n    console.log('refreshall')\n    console.log(ev)\nthis.listsData = this.modelService.refreshAllAssignments()\n}\n//sortstatus(){\n\n//}\n//sortunit(){}\n//hidethird(){}\n\n\n  tiles: any[] = [\n    {text: 'Arr_1', cols: 1, rows: 4, color: 'lightblue'},\n    {text: 'Dep_2', cols: 1, rows: 2, color: 'lightblue'},\n    {text: 'T.O._5', cols: 1, rows: 2, color: 'lightblue'},\n    {text: 'Arr_1_2', cols: 1, rows: 2, color: '#DDBDF1'},\n    {text: 'Arr_2_2', cols: 1, rows: 2, color: '#DDBDF1'},\n  ];\n\n\n  fixedCols: number = 1;\n  fixedRowHeight: number = 100;\n  ratioGutter: number = 1;\n  fitListHeight: string = '400px';\n  ratio: string = '4:1';\n\n  addTileCols() { this.tiles[2].cols++; }\n\n\n}\n"]}