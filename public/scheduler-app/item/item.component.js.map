{"version":3,"file":"item.component.js","sourceRoot":"","sources":["../../src/demo-app/scheduler-app/item/item.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+D,eAAe,CAAC,CAAA;AAC/E,uBAAuB,iBACvB,CAAC,CADuC;AACxC,wCAA4B,4BAC5B,CAAC,CADuD;AACxD,sCAA2B,0BAA0B,CAAC,CAAA;AACtD,qDAA8C,yCAAyC,CAAC,CAAA;AAaxF;IAWE;QAVW,oBAAe,GAAG,IAAI,mBAAY,EAAE,CAAA;QACpC,kBAAa,GAAG,IAAI,mBAAY,EAAE,CAAA;IAS9B,CAAC;IAEhB,gCAAQ,GAAR;IACA,CAAC;IACD,yCAAiB,GAAjB,UAAkB,EAAE;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,aAAa,CAAA;QACpC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IAC7B,CAAC;IACC,uCAAe,GAAf,UAAgB,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;QAC9B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAA;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IAC3B,CAAC;IAtBD;QAAC,aAAM,EAAE;;0DAAA;IACT;QAAC,aAAM,EAAE;;wDAAA;IACb;QAAC,YAAK,EAAE;;mDAAA;IACR;QAAC,YAAK,EAAE;;8CAAA;IACR;QAAC,YAAK,EAAE;;gDAAA;IACR;QAAC,YAAK,EAAE;;mDAAA;IAjBR;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,IAAI,EAAC,EAEJ;YACD,QAAQ,EAAE,SAAS;YACnB,UAAU,EAAC,CAAC,CAAC,qCAAW,CAAC,EAAC,CAAC,kCAAU,CAAC,EAAE,CAAC,gBAAO,CAAC,CAAC;YAClD,WAAW,EAAE,qBAAqB;YAClC,KAAK,EAAC,CAAC,oEAA6B,CAAC;YACrC,SAAS,EAAE,CAAC,oBAAoB,CAAC;SAClC,CAAC;;qBAAA;IAyBF,oBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,qBAAa,gBAwBzB,CAAA","sourcesContent":["import { Component, Output, EventEmitter, Input, OnInit } from '@angular/core';\nimport { NgClass} from '@angular/common'\nimport { CsLiDragger } from '../cs-li-dragger.directive'\nimport { CsSelected } from '../cs-selected.directive';\nimport { PrettyHousekeepingAssignments } from '../pretty-housekeeping-assignments.pipe';\n\n@Component({\n  moduleId: module.id,\n  host:{\n//  '(onselectiontoggle)':'onSelectionToggle($event)'\n  },\n  selector: 'cs-item',\n  directives:[[CsLiDragger],[CsSelected], [NgClass]],\n  templateUrl: 'item.component.html',\n  pipes:[PrettyHousekeepingAssignments],\n  styleUrls: ['item.component.css']\n})\nexport class ItemComponent implements OnInit {\n    @Output()selectionToggle = new EventEmitter()\n    @Output()dropSpotValid = new EventEmitter()\n@Input() viewText\n@Input() uid\n@Input() index\n@Input() selected\n\n\n\nprivate validDrop\n  constructor() {}\n\n  ngOnInit() {\n  }\n  onselectiontoggle(ev){\n      this.selected = ev.selectionMade\n  this.selectionToggle.emit(ev)\n  }\n    ondropspotvalid(ev){\n        console.log('ondropspotvalid')\n        this.validDrop = ev\n    this.dropSpotValid.emit(ev)\n    }\n}\n"]}