{"version":3,"file":"uid-generator.spec.js","sourceRoot":"","sources":["../src/demo-app/scheduler-app/uid-generator.spec.ts"],"names":[],"mappings":";AAAA,wBAMO,uBAAuB,CAAC,CAAA;AAC/B,8BAA2B,iBAAiB,CAAC,CAAA;AAE7C,kBAAQ,CAAC,cAAc,EAAE;IACvB,YAAE,CAAC,2BAA2B,EAAE;QAC9B,gBAAM,CAAC,IAAI,4BAAY,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;IAC1C,CAAC,CAAC,CAAC;IACH,YAAE,CAAC,yCAAyC,EAAE;QAC1C,IAAI,KAAK,GAAG,IAAI,4BAAY,EAAE,CAAA;QAChC,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IACH,YAAE,CAAC,wBAAwB,EAAE;QACzB,IAAI,KAAK,GAAG,IAAI,4BAAY,EAAE,CAAA;QAChC,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IACH,YAAE,CAAC,0BAA0B,EAAE;QAC3B,IAAI,KAAK,GAAG,IAAI,4BAAY,EAAE,CAAA;QAChC,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IACH,YAAE,CAAC,8CAA8C,EAAE;QAC/C,IAAI,KAAK,GAAG,IAAI,4BAAY,EAAE,CAAA;QAChC,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IACH,YAAE,CAAC,qCAAqC,EAAE;QACtC,IAAI,KAAK,GAAG,IAAI,4BAAY,EAAE,CAAA;QAChC,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IACH,YAAE,CAAC,qCAAqC,EAAE;QACtC,IAAI,KAAK,GAAG,IAAI,4BAAY,EAAE,CAAA;QAChC,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IACH,YAAE,CAAC,qCAAqC,EAAE;QACtC,IAAI,KAAK,GAAG,IAAI,4BAAY,EAAE,CAAA;QAChC,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IACH,YAAE,CAAC,8BAA8B,EAAE;QAC/B,IAAI,KAAK,GAAG,IAAI,4BAAY,EAAE,CAAA;QAChC,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {\n  describe,\n  ddescribe,\n  expect,\n  iit,\n  it\n} from '@angular/core/testing';\nimport {UidGenerator} from './uid-generator';\n\ndescribe('UidGenerator', () => {\n  it('should create an instance', () => {\n    expect(new UidGenerator()).toBeTruthy();\n  });\n  it('shoud generate an \\'0\\' when passed a 0', () => {\n      let ctyle = new UidGenerator() \n    expect(ctyle.generate(0)).toEqual('0');\n  });\n  it('should be 00 given(26)', () => {\n      let ctyle = new UidGenerator() \n    expect(ctyle.generate(26)).toEqual('00');\n  });\n  it('should be 0_0 given(0,0)', () => {\n      let ctyle = new UidGenerator() \n    expect(ctyle.generate(0,0)).toEqual('0_0');\n  });\n  it('shoud generate an \\'0_0\\' when passed (0, 0)', () => {\n      let ctyle = new UidGenerator() \n    expect(ctyle.generate(0,1)).toEqual('0_1');\n  });\n  it('should start with 00 when passed 26', () => {\n      let ctyle = new UidGenerator() \n    expect(ctyle.generate(26,1)).toEqual('00_1');\n  });\n  it('should start with 11 when passed 27', () => {\n      let ctyle = new UidGenerator() \n    expect(ctyle.generate(27,1)).toEqual('11_1');\n  });\n  it('should start with BB when passed 27', () => {\n      let ctyle = new UidGenerator() \n    expect(ctyle.generate(52,0)).toEqual('000_0');\n  });\n  it('should be 2525_5 given(51,5)', () => {\n      let ctyle = new UidGenerator() \n    expect(ctyle.generate(51,5)).toEqual('2525_5');\n  });\n});\n"]}